function [gdf,gd,agd,wagd]=spec2gdf2(spec,fftspec,f0,fs)%	test function to convert absolute spectrum to group delay%	[gdf,gd]=spec2gdf2(spec,fftspec,f0,fs)%	spec	: STRAIGHT spectral slice from 0 to fs/2%	fftspec	: FFT spectral slice from 0 to fs/2%	f0		: fundamental frequency (Hz)%	fs		: samping frequency (Hz)%	gdf		: group delay function (ms)%	gd		: group delay at f0 (ms)%	agd		: average group delay (ms)%	wagd	: weighted average group delay (ms) (first 3 harmonics)fftl=(length(spec)-1)*2;rbb2=(length(spec)-1):-1:2;lft=1-hanning(fftl);lft=1.0./(1+exp(-(lft-0.5)*60));ff=[spec;spec(rbb2)];ccp=real(fft(log(ff+1/1000000)));ccp2=[ccp(1);2*ccp(2:fftl/2);0*ccp(fftl/2+1:fftl)];ffx=(fft(ccp2.*lft)/fftl);tx=real(ifft(exp(ffx)));%gdf=diff(unwrap(angle(fft(tx))))/(2*pi*fs/fftl)*1000;%gdf=[gdf(1);gdf];gdf=(imag(ifft(ccp2.*lft)))/(2*pi*fs/fftl)*1000;gdf=[diff(gdf);gdf(1)-gdf(fftl)];gdf=(gdf+[gdf(fftl);gdf(1:fftl-1)])/2;pf0=floor(f0/fs*fftl)+1;fxx=(0:fftl-1)/fftl*fs;wfq=1.0./(1+exp((fxx-f0*3.7)/15));wfql=1.0./(1+exp(-(fxx-f0*0.7)/6));wfq=wfq.*wfql;wfq=wfq(1:length(spec))';gd=gdf(pf0)+(f0/fs*fftl+1-pf0)*(gdf(pf0+1)-gdf(pf0));agd=sum(fftspec.^2.*gdf(1:fftl/2+1))/sum(fftspec.^2);wagd=sum(wfq.*fftspec.^2.*gdf(1:fftl/2+1))/sum(wfq.*fftspec.^2);