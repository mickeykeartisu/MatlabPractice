%% initialize environments
clc;
clear variables;

%% load phoneme dictionary
phoneme_counter_path = "D:/名城大学/研究室/研究/Sources/MatFiles/4モーラ単語リスト/Set1/phoneme_dictionary/phoneme_dictionary.mat";
phoneme_counter = load(phoneme_counter_path);
phoneme_counter = phoneme_counter.phoneme_counter;
phoneme_keys = keys(phoneme_counter);

%% determine each audio condition
mask_list = ["noMask", "withMask"];
spectrogram_list = ["World", "TandemStraight"];

%% set plot parameters
font_size = 24;

%% make split mat file
for mask_index = 1 : length(mask_list)
    for spectrogram_index = 1 : length(spectrogram_list)
        for key_index = 1 : length(phoneme_keys)
            split_dynamic_feature_path = "D:/名城大学/研究室/研究/Sources/MatFiles/4モーラ単語リスト/Set1/" + mask_list(mask_index) + "/DynamicFeature/Split/candidate_1/" + spectrogram_list(spectrogram_index) + "/phoneme " + int2str(calculate_dictionary_index(phoneme_counter, phoneme_keys(key_index))) + ".mat";
            split_dynamic_feature = load(split_dynamic_feature_path);
            split_dynamic_feature = split_dynamic_feature.split_dynamic_feature;
            disp(split_dynamic_feature_path);

            window = figure;
            window.WindowState = "maximized";
            grid on;
            hold on;
            legend;
            base_bar = bar(split_dynamic_feature.split_dynamic_feature_list);
            base_bar(1).BaseValue = 0;
            title("Sub band dynamic feature phoneme " + phoneme_keys(phoneme_index), "FontSize", font_size);
            xlim([0 floor(spectrogram.sample_rate / 4)]);
            ylim([-60 10]);
            xlabel("Frequency [Hz]", "FontSize", font_size);
            ylabel("Long term average spectrum Magnitude [dB]", "FontSize", font_size);
            set(gca, "FontSize", font_size);
            long_term_average_spectrum_png_path = "D:/名城大学/研究室/研究/Outputs/4モーラ単語リスト/Set1/" + mask_list(mask_index) + "/LongTermAverageSpectrum/" + spectrogram_list(spectrogram_index) + "/word " + int2str(file_index) + ".png";
            saveas(gcf, long_term_average_spectrum_png_path);

            keyboard;
            clf(gcf);
        end
    end
end

delete(gcf);